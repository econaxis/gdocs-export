version: '3.4'
services:
    pydocs:
        image: 'henry2833/pydocs:worker'
        build:
            dockerfile: Dockerfile
            context: .
            network: pydocs-net
        environment:
            REDIS_PASSW: "${REDIS_PASSW}"
            SQL_CONN:  "${SQL_CONN}"
            REDIS_HOST: "${REDIS_HOST}"
            RQ_NAME: 'default'
            WORKER: 'true'
        deploy:
            resources:
                limits:
                    memory: 160M
                reservations:
                    memory: 100M
    web:
        image: 'henry2833/pydocs:web'
        build:
            dockerfile: Dockerfile
            context: .
            network: pydocs-net
        environment:
            REDIS_PASSW: "${REDIS_PASSW}"
            SQL_CONN:  "${SQL_CONN}"
            REDIS_HOST: "${REDIS_HOST}"
            HOMEDATAPATH: "${HOMEDATAPATH}"
            HOMEPATH: "${HOMEPATH}"
            PORT: 5000
            AZURESTORAGEKEY: "${AZURESTORAGEKEY}"
        deploy:
            resources:
                limits:
                    memory: 500M
                reservations:
                    memory: 200M
        ports:
            - target: 5000
              published: 80
    sql:
        image: 'henry2833/pydocs:sql'
        build:
            dockerfile: Dockerfile
            network: pydocs-net
            context: .
        environment:
            REDIS_PASSW: "${REDIS_PASSW}"
            SQL_CONN:  "${SQL_CONN}"
            REDIS_HOST: "${REDIS_HOST}"
            SQL_SERV: "true"
            HOMEDATAPATH: "${HOMEDATAPATH}"
            HOMEPATH: "${HOMEPATH}"
            AZURESTORAGEKEY: "${AZURESTORAGEKEY}"
        container_name: sql_serv



